{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-6407ea9a-8aa0-4e99-bdc3-c044912004d2.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"37faba","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"dcfa9f","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e64756","input":"","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"27ca0f","input":"### Question 3\n\nRecall the Collatz Operation from the first week:\n\n - If `n` is even, divide it by two\n - If `n` is odd, triple it and add one\n \nIf we repeatedly apply the operation, we get a sequence of integers which terminates at the number 1. We define the 'Collatz number' of an integer $n$ to be the number of iterations in the sequence.\n \nWrite a program which generates a line graph with integers 0 ... 100 on the x-axis, and Collatz number on the y axis.\n ","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"46e505","input":"### Question 2\n\n> TODO: rewrite this\n\nA cannon located at position `x = 0` fires a cannonball at an angle `theta` from the horizontal (measured in radians) and speed `speed` m/s. Write a program which plots a graph of the cannonball's trajectory.\n\n```{image} cannon.jpg\n:width: 200px\n```\n\nSet the initial positions `x` and `y` to zero and velocities `vx` and `vy` to `np.cos(theta)` and `np.sin(theta)`. Each time step, update the positions using `x = x + vx * DELTA_T` and `y = y + vy * DELTA_T`. Update the velocity `vy = vy - g * DELTA_T`. The x velocity remains constant.\nCreate lists `x_list` and `y_list` to store the x and y positions, appending the new positions at each timestep.\n\nRepeat until the `y` position becomes negative (what kind of loop should you use for this?). Finally, use `matplotlib` to plot the two lists.\n\n\nExtend your program so that it prints `hit` or `miss` depending if the cannonball lands less than 20m from a target placed at a distance `dis` from the cannon.\n\n```{image} cannon_output.png\n:width: 200px\n```\n`hit`","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"8343c6","input":"# Tutorial 3","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"df0791","input":"## Question 1\n\nGiven a string representing a DNA sequence, we want to print a sequence of nucleotide names:\n```\ndna_seq = \"gttccccaagctcttacataaatgtcgtagggttccagctacgtgttgttgggccaccca\"\n```\nOutput:\n```\nGuanine\nThymine\nThymine\nCytosine\n...\n```\n- Create two lists `letters = [\"A\", \"G\", \"C\", \"T\"]` and `names = [\"Adenine\", \"Guanine\", \"Cytosine\", \"Thymine\"]`\n- Loop over every character in `dna_seq`. For each character:\n  - Find the index of the character in `letters`\n  - Print the item in the equivalent position in `names`\n\n**HINT**: First try just for a single letter. E.g. given `nuc = \"A\"`, print `Adenine`.\n","pos":6,"type":"cell"}
{"id":0,"time":1635076445153,"type":"user"}
{"last_load":1635076444623,"type":"file"}