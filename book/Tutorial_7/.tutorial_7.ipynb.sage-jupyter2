{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":false,"type":"settings"}
{"cell_type":"markdown","id":"036b91","input":"### Part 1\n\nFollow the steps in the notes to determine the (x, y) co-ordinates of the bead in the image `particle/frame0.png`.\n1. Use `np.imread` to convert the image file to a numpy array.\n1. Convert the image to greyscale by summing along the final axis.\n1. Threshold the array. Determine a value for the threshold which results in just a single 'blob'.\n1. Determine the location using the function `sn.center_of_mass` (you do not need to determine the largest blob since there should be only one!)\n1. Use `plt.imshow` and `plt.scatter` to mark the location of the bead on the image, like this:\n\n![](q1.png)","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"70ba54","input":"### Part 2\n\nUse your code from Question 1 to write a Python function `get_particle_location(filename)` which returns the (x, y) co-ordinates of the bead in the image file `filename`.\n\n```\nloc = get_particle_location(\"particle/frame0.png\")\nprint(loc)\n(98.92857142857143, 71.60714285714286)\n```","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"96a5a0","input":"## Question 1\nThe folder `particle` contains a sequence of images of a bead undergoing [brownian motion](https://en.wikipedia.org/wiki/Brownian_motion). Your goal is to track the movement of the bead by identifying its position in each of the frames.\n\n> Download <a href=\"../tutorial_7/particle.zip\" download>particle.zip</a> then upload it to Cocalc. Unzip the folder by clicking the file then the 'Extract Files' button in Cocalc.","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"aa4504","input":"## Question 2\n\nRepeat the above question for the noisy images in the folder `particle_noisy`.\n\n<a href=\"../tutorial_7/particle_noisy.zip\" download>particle_noisy.zip</a>\n\nFor Part 1, you will have to choose a suitable threshold then pick the blob with the largest size, as in the notes.\n\nFor Part 3, can you find a value of the threshold that works for all of the images? If not, how could you solve this?\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"c71a8a","input":"### Part 3\n\nBy calling your function `get_particle_location` on each of the files, construct a 2 by 10 numpy array containing the co-ordinates of the bead in each of the 10 frames.\n\nMake a plot of x vs time, y vs time and y vs x. Make sure you scale the axes so that they correspond to the dimensions of the image, as below.\n\n![](b2.png) ![](b3.png) ![](b1.png)","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"e759fb","input":"# Tutorial 7","pos":0,"type":"cell"}
{"id":0,"time":1638286863481,"type":"user"}
{"last_load":1638125245872,"type":"file"}