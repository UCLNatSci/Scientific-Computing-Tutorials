{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":false,"type":"settings"}
{"cell_type":"code","id":"0c71a1","input":"","pos":2,"type":"cell"}
{"cell_type":"code","id":"430757","input":"","pos":6,"type":"cell"}
{"cell_type":"code","id":"6fa1f7","input":"","pos":8,"type":"cell"}
{"cell_type":"code","id":"e7a89c","input":"","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"318bb1","input":"## Question 3\nWrite a function `threshold(a, x)` which thresholds the array `a` at the value `x`. The array returned be the function should be the same shape as `a`, and `True` where `a` greater or equal to x, otherwise `False`.\nIf `q1` is the array from Question 1:\n```\nz = threshold(q1, 1.5)\nprint(z)\n[[False False  True  True  True]\n [False  True  True  True  True]\n [False False False False False]]\n```","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"3ce3cb","input":"## Question 4\n\nThe image file `sixbysix.png` (<a href=\"../tutorial_7/sixbysix.png\" download>download</a>) consists of a large but faint blob in the top left, and a number of small bright pixels elsewhere. Follow the particle tracking method in the notes to find and mark the large blob, as below.\n\n1. Read the image into an array and reduce to greyscale\n1. Threshold the array at a suitable value\n1. Find all blobs in the image\n1. Identify the largest blob\n1. Determine the co-ordinates of the largest blob and \n\n![](sixbysix_marked.png)","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"491792","input":"# Practice 7","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"89234a","input":"## Question 1\n\nFollow the steps below to create a 3 x 5 numpy array representing the following data:\n\n$$\\begin{matrix}\n0 & 1 & 2 & 3 & 4 \\\\\n0 & 1.5 & 3 & 4.5 & 6\\\\\n0 & 0.25 & 0.5 & 0.75 & 1\n\\end{matrix}$$\n\n1. Use `np.linspace` or `np.arange` to create three 1 x 5 arrays `[0 1 2 3 4]`, `[0. 1.5 3. 4.5 6.]` and `[0 0.25 0.5 0.75 1.]`.\n1. Use `np.zeros` to create an 5 x 3 array of zeros.\n1. Use slicing to assign each 1 x 5 array to each row of the array.\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"cb7801","input":"## Question 2\n\nUse `np.sum` to create:\n1. A 1 x 3 array containing the sum of the rows\n1. A 1 x 5 array containing the sum of the columns\n\nof the array created in Question 1.","pos":3,"type":"cell"}
{"id":0,"time":1638125258232,"type":"user"}
{"last_load":1638125259257,"type":"file"}