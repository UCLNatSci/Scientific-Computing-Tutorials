{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"ac06c3","input":"","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8547d8","input":"# Tutorial 2\n### Question 1\nIn this question you will write a function `nth_digit(n, num)` which returns the `n`th digit of the number `num`.\n\n### Step 1\n\nWrite a function `count_digits`. `count_digits(num)` calculates the number of digits in the integer `num`. `countDigits` should return `1` for `0–9`, `2` for `10–99`, `3` for `100–999`, etc.  \n**Hint**: Use a while loop to repeatedly divide `num` by `10` until it is less than 1.\n\n### Step 2\n\nWrite a function `nthDigitBack`. `nthDigitBack(n, num)` finds the nth lowest order digit in `num`, i.e., the nth digit from the right. We take the rightmost digit to be the 0th digit. `nthDigitBack` should evaluate to `0` for digits beyond the \"start\" of the number.  \n**Hint**: use a `for` loop to repeatedly divide by 10, followed by the modulo (`%`) operator and the `round` function to pick out just the rightmost digit. \nFor example:\n```\nnth_digit_back(0,123)\n3\nnth_digit_back(1,123)\n2\nnth_digit_back(2,123)\n1\nnth_digit_back(3,123)\n0\nnth_digit_back(0,0)\n0\nnth_digit_back(3,18023)\n8\n```\n\n### Step 3\n\nWrite a function `nth_digit`, using `nth_digit_back` and `count_digits`. `nth_digit(n, num)` finds the nth highest order digit of `num`, i.e., the nth digit from the left. We take the leftmost digit to be the 0th. `nth_digit` should evaluate to 0 for digits beyond the \"end\" of the number. For example:\n```\nnth_digit(0,123)\n1\nnth_digit(1,123)\n2\nnth_digit(2,123)\n3\nnth_digit(3,123)\n0\nnth_digit(0,0)\n0\nnth_digit(3,18023)\n2\n```\n\n","pos":0,"state":"done","type":"cell"}
{"id":0,"time":1634297643774,"type":"user"}
{"last_load":1634297631904,"type":"file"}