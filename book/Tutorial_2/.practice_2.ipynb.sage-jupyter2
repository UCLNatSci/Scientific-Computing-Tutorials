{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-75a73681-5a13-4075-ba5e-afda1b2c2093.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"49342f","input":"","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"85b385","input":"","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"1ca9a8","input":"## Question 5\n\nWrite a program which prints a multiplication table, like this:\n```\n 1  2  3  4  5  6  7  8  9 10\n 2  4  6  8 10 12 14 16 18 20\n 3  6  9 12 15 18 21 24 27 30\n...\n10 20 30 40 50 60 70 80 90 100\n```\n\nYou will need to use two nested loops.","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"5ba312","input":"[Turtle Graphics](https://en.wikipedia.org/wiki/Turtle_graphics) is a graphical computer language often used to introduce programming to beginners. The user controls an on-screen turtle by sending commands such as 'forward 50' and 'rotate 90'. The turtle follows the commands in sequence, drawing a line as it moves.\n\nThe code below implements a Turtle program in Python.\n\n> Copy the code into a new notebook file and execute it.\n\n:::{note}\nYou don't need to understand this code - it contains some more advanced constructs that we haven't covered yet.\n:::\n\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# function definitions\n\ndef start():\n    state[0] = 0\n    state[1] = 0\n    state[2] = 0\n    \n    plt.figure(figsize=(5,5))\n    plt.xlim(-2, 2)\n    plt.ylim(-2, 2) \n\ndef draw_forward(dis):\n    x = state[0]\n    y = state[1]\n    angle = state[2]\n    state[0] = x + dis * np.cos(angle)\n    state[1] = y + dis * np.sin(angle)\n    plt.plot([x, state[0]], [y, state[1]], color=\"black\", linewidth=2)\n    \ndef rotate_left(theta):\n    state[2] = state[2] + theta * np.pi / 180\n    \nstate = [0, 0, 0]\n\n# Turtle instructions\n    \nstart()\nmove_forward(2)\nrotate_left(90)\nmove_forward(2)\n```\n\n`start` is a function which creates a new drawing surface and moves the turtle back to the origin.\n\n`draw_forward` is a function which updates the x and y co-ordinates and draws a line between the old and new co-ordinates.\n\n`rotate_left` is a function which updates the angle by `theta` degrees.\n\n## Question 1\n\nComplete the turtle instructions code so that it draws a square. Then, write a function `draw_square` which draws a square (put your function definitions near the top of the code file, underneath `# function definitions`.)\n\n```\n# draw a square\ndraw_square()\n```\n\n![](images/square.png)\n\n\n## Question 2\n\nWrite a function `draw_polygon(n, dis)` which draws an n-sided polygon with side length `dis`. Use it to draw a hexagon with side-length 1.\n\n```\n# draw a hexagon\ndraw_polygon(6, 1)\n```\n\n![](images/hexagon.png)\n\n## Question 3\n\nWrite a function `draw_rotated_polygons(n, m)` which draws a pattern like below.\n\n```\n# Draw 5 rotated squares\ndraw_rotated_polygons(4, 5)\n```\n\n![](images/rotated_polygon.png)\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"d5548a","input":"## Question 4\n\nCopy the three function definitions `get_number_of_day`, `get_day_of_week` and `print_day_of_week_from_number_of_year` from the notes. Correct the code so that it prints the day of the week correctly.","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"f1b9cd","input":"# Practice 2","pos":0,"type":"cell"}
{"id":0,"time":1634804438535,"type":"user"}
{"last_load":1634820805727,"type":"file"}