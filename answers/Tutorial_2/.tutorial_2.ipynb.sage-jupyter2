{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-ab3b9c6d-e0e8-4b51-8719-b88696f3a818.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1634484631114,"exec_count":9,"id":"fe4127","input":"def sphere(R, x):\n    return (R**2 - x**2)**0.5\n\nvol = 0\nd = 2 / 10\npi = 3.14159\nfor i in range(10):\n    x = -1 + (i / 10) * 2\n    y = sphere(1, x)\n    vol_disc = d * pi *y ** 2\n    vol += vol_disc\n    \nprint(\"Volume of sphere radius 1:\", vol)\n\n# let's check it against the formula vol = (4/3)*pi*r**3\nprint((4/3) * pi)\n\ndef sphere_vol(R, n):\n    vol = 0\n    d = 2 * R / n\n    pi = 3.14159\n    for i in range(n):\n        x = -R + (i / n) * 2 * R\n        y = sphere(R, x)\n        vol_disc = d * pi * y ** 2\n        vol += vol_disc\n    return vol\n        \ndiff = 1\nvol = 0\nn = 2\nwhile diff > 1e-4:\n    vol_prev = vol\n    vol = sphere_vol(1, n)\n    diff = vol - vol_prev\n    # could use np.abs here instead\n    if diff < 0:\n        diff = diff * -1\n    n += 1\n    # print(\"vol:\", vol)\n    # print(\"diff:\", diff)\n        \nprint(n)\n    ","kernel":"python3","output":{"0":{"name":"stdout","text":"Volume of sphere radius 1: 4.146898800000001\n4.188786666666666\n46\n"}},"pos":3,"scrolled":true,"start":1634484631104,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"52d650","input":"","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"0b21a3","input":"def is_divisible(n, m):\n    return n % m == 0\n\ndef is_prime(n):\n    for m in range(2, n):\n        if is_divisible(n, m):\n            return False\n    return True\n\ndef number_of_primes(n):\n    i = 0\n    for m in range(2, n+1):\n        if is_prime(m):\n            i += 1\n    return i\n            \nprint(\"4 is divisible by 2:\", is_divisible(4, 2))\nprint(\"4 is divisible by 3:\", is_divisible(4, 3))\n\nprint(\"7 is a prime number:\", is_prime(7))\nprint(\"8 is a prime number:\", is_prime(8))\n\nprint(\"Number of prime numbers up to 10:\", number_of_primes(10))\nprint(\"Number of prime numbers up to 11:\", number_of_primes(11))\n    ","output":{"0":{"name":"stdout","output_type":"stream","text":"4 is divisible by 2: True\n4 is divisible by 3: False\n7 is a prime number: True\n8 is a prime number: False\nNumber of prime numbers up to 10: 4\nNumber of prime numbers up to 11: 5\n"}},"pos":1,"type":"cell"}
{"cell_type":"markdown","id":"93ca28","input":"## Extensions\n1. Investgate the [Prime Number Theorem](https://en.wikipedia.org/wiki/Prime_number_theorem).\n1. Write a function `volume_of_revolution(func, x_min, x_max, n)` which calculates the volume of the surface of revolution of the curve given by function `func`. `func(x)` should be a function of a single variable which returns the y-value of the curve given the x value. You'll have to learn how to [pass a function as an argument to another function](https://www.geeksforgeeks.org/passing-function-as-an-argument-in-python/).\n\n\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"e0b9a7","input":"## Question 2\n\nA [solid of revolution](https://en.wikipedia.org/wiki/Solid_of_revolution) is a three-dimensional figure contstructed by rotating a curve about a straight line.\n\nWe can estimate the volume of a solid of revolution by dividing it into a sequence of stacked discs and summing the volume of each.\n\n![a](https://miro.medium.com/max/2400/0*d7QEcno6XhPOiJSt.png)\n\n1. A sphere of radius $R$ is formed by rotating the curve $y = \\sqrt{R^2 - x^2}$ around the x-axis between $-R$ and $R$. Estimate the volume of a sphere of radius 1 by dividing the figure into 10 discs [use a value of 3.14159 for $\\pi$].\n2. Write a function `sphere_vol(R, n)` which returns the estimate of the volume of a sphere of radius `R` calculated by dividing it into $n$ discs.\n3. The estimate should get more accurate as we increase $n$. We can estimate the accuracy by calculating the difference between `sphere_vol(R, n)` and `sphere_vol(R, n-1)`. For `R=1`, how large does `n` need to be so that difference between consecutive estimates is less than $10^{-4}$?","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"edb716","input":"# Tutorial 2\n\n## Question 1\n\nAn integer $n$ is a *prime number* if it is divisible only by 1 and $n$. \n\n1. Write a function `is_divisible(n, m)` which returns `True` if `n` is divisible by `m`, and otherwise returns `False`.\n1. Write a function `is_prime(n)` which returns `False` if `n` is divisible by any integer between `2` and `n-1`, and otherwise returns `True`.\n1. Write a function `number_of_primes(n)` which returns the number of prime numbers less than or equal to `n` [NB 1 is *not* a prime number].\n\nWrite two tests for each function.","pos":0,"type":"cell"}
{"id":"0caee5","input":"","pos":7,"type":"cell"}
{"id":0,"time":1634471892827,"type":"user"}
{"last_load":1634481961913,"type":"file"}