{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-381b33d0-29e1-460a-bb7e-939310b159b2.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1633897428117,"exec_count":2,"id":"a61d77","input":"t = 1000000\nt_orig = t\ns = t % 60\nt = t // 60\nm = t % 60\nt = t // 60\nh = t % 24\nd = t // 24\n\nprint(t_orig, \" seconds is \", d, \" days \", h, \":\", m, \":\", s, sep=\"\")","kernel":"python3","output":{"0":{"name":"stdout","text":"1000000 seconds is 11 days 13:46:40\n"}},"pos":1,"start":1633897428112,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"302f4c","input":"","pos":0.6666666666666666,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c2654b","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"bdac63","input":"n = 5510\n\nprint(n)\nwhile n != 1:\n    if n % 2 == 0:\n        n = n //2\n    else:\n        n = 3*n + 1\n    print(n)\n    ","kernel":"python3","output":{"0":{"name":"stdout","text":"5510\n2755\n8266\n4133\n12400\n6200\n3100\n1550\n775\n2326\n1163\n3490\n1745\n5236\n2618\n1309\n3928\n1964\n982\n491\n1474\n737\n2212\n1106\n553\n1660\n830\n415\n1246\n623\n1870\n935\n2806\n1403\n4210\n2105\n6316\n3158\n1579\n4738\n2369\n7108\n3554\n1777\n5332\n2666\n1333\n4000\n2000\n1000\n500\n250\n125\n376\n188\n94\n47\n142\n71\n214\n107\n322\n161\n484\n242\n121\n364\n182\n91\n274\n137\n412\n206\n103\n310\n155\n466\n233\n700\n350\n175\n526\n263\n790\n395\n1186\n593\n1780\n890\n445\n1336\n668\n334\n167\n502\n251\n754\n377\n1132\n566\n283\n850\n425\n1276\n638\n319\n958\n479\n1438\n719\n2158\n1079\n3238\n1619\n4858\n2429\n7288\n3644\n1822\n911\n2734\n1367\n4102\n2051\n6154\n3077\n9232\n4616\n2308\n1154\n577\n1732\n866\n433\n1300\n650\n325\n976\n488\n244\n122\n61\n184\n92\n46\n23\n70\n35\n106\n53\n160\n80\n40\n20\n10\n5\n16\n8\n4\n2\n1\n"}},"pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"56d4c1","input":"## Question 2 (The Collatz Problem)\n\nGiven a positive integer `n`, the Collatz Operation is defined as follows:\n    \n - If the number is even, divide it by two\n - If the number is odd, triple it and add one\n \nRepeatedly applying the Collatz Operation results in a sequence if integers which eventually reaches the number 1.\n\nWrite a program which generates the Collatz Sequence for a given positive integer $n$. \n\nFor example, if `n = 5` then your program should produce the following:\n\n```\n5\n16\n8\n4\n2\n1\n```\n\nNow try your program with negative values of `n`. What happens? Explain why.","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"b616ee","input":"## Question 4 (Optional Challenge)\n\nGiven a positive integer $n$, define the Collatz Number $C(n)$ to be the length of the Collatz Sequence for $n$. For example $C(5) = 6$.\n\nWhat is the smallest number $n$ whose Collatz Number $C(n)$ is greater than one million?","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"d0c00a","input":"# Tutorial 1\n\n## Question 1\nA time `t` in seconds can be converted to days, hours, minutes and seconds using integer division:\n\n1. Divide `t` by 60; set `t` to the quotient and call the remainder `s`.\n1. Divide `t` by 60; set `t` to the quotient and call the remainder `m`.\n1. Divide `t` by 24; set `d` to the quotient and call the remainder `h`.\n\nCalculate the number of days, hours, minutes and seconds in one million seconds. Display the result as follows:\n\n    1000000 seconds is xx days H:M:S\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"e16287","input":"## Question 3\n\nWe can calculate how many digits there are in a number by repeatedly dividing by 10 until the number is less than one.\n\n - Write peudo-code for this calculation\n - Write a Python program to implement this, displaying the result in the format `1234 has 4 digits.`\n - Test your program with a variety of numbers\n - Extend your program so that it works for negative numbers\n","pos":0.3333333333333333,"type":"cell"}
{"id":0,"time":1633896101812,"type":"user"}
{"last_load":1633896078960,"type":"file"}